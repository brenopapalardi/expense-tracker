{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projetos-react\\\\expense-tracker\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as C from './App.styles';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/TableArea';\nimport { InfoArea } from './components/InfoArea';\nimport { InputArea } from './components/InputArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState(items);\n  const [filteredList, setFilteredList] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  useEffect(() => {\n    setFilteredList(filterListByMonth(list, currentMonth));\n  }, [list, currentMonth]);\n  useEffect(() => {\n    let incomeCount = 0;\n    let expenseCount = 0;\n\n    for (let i in filteredList) {\n      if (categories[filteredList[i].category].expense) {\n        expenseCount += filteredList[i].value;\n      } else {\n        incomeCount += filteredList[i].value;\n      }\n    }\n\n    setIncome(incomeCount);\n    setExpense(expenseCount);\n  }, [filteredList]);\n\n  const handleMonthChange = newMonth => {\n    setCurrentMonth(newMonth);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.Header, {\n      children: /*#__PURE__*/_jsxDEV(C.HeaderText, {\n        children: \"Sistema Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InfoArea, {\n        currentMonth: currentMonth,\n        onMonthChange: handleMonthChange,\n        income: income,\n        expense: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableArea, {\n        list: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GdPDmJgsXYmWgNxhVHYGoqgU+tA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/projetos-react/expense-tracker/src/App.tsx"],"names":["useState","useEffect","C","categories","items","getCurrentMonth","filterListByMonth","TableArea","InfoArea","InputArea","App","list","setList","filteredList","setFilteredList","currentMonth","setCurrentMonth","income","setIncome","expense","setExpense","incomeCount","expenseCount","i","category","value","handleMonthChange","newMonth"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AAGA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,sBAAnD;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,QAA0B,uBAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACI,KAAD,CAAhC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAU,EAAV,CAAhD;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAACK,eAAe,EAAhB,CAAhD;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACmB,OAAD,EAASC,UAAT,IAAuBpB,QAAQ,CAAC,CAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,eAAe,CAAER,iBAAiB,CAAEK,IAAF,EAAQI,YAAR,CAAnB,CAAf;AACD,GAFQ,EAEP,CAACJ,IAAD,EAAMI,YAAN,CAFO,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAK;AACb,QAAIoB,WAAW,GAAG,CAAlB;AACA,QAAIC,YAAY,GAAG,CAAnB;;AACA,SAAI,IAAIC,CAAR,IAAaV,YAAb,EAA0B;AACxB,UAAGV,UAAU,CAACU,YAAY,CAACU,CAAD,CAAZ,CAAgBC,QAAjB,CAAV,CAAqCL,OAAxC,EAAgD;AAC9CG,QAAAA,YAAY,IAAIT,YAAY,CAACU,CAAD,CAAZ,CAAgBE,KAAhC;AACD,OAFD,MAEO;AACLJ,QAAAA,WAAW,IAAIR,YAAY,CAACU,CAAD,CAAZ,CAAgBE,KAA/B;AACD;AACF;;AAEDP,IAAAA,SAAS,CAACG,WAAD,CAAT;AACAD,IAAAA,UAAU,CAACE,YAAD,CAAV;AAED,GAdQ,EAcP,CAACT,YAAD,CAdO,CAAT;;AAgBA,QAAMa,iBAAiB,GAAIC,QAAD,IAAsB;AAC5CX,IAAAA,eAAe,CAACW,QAAD,CAAf;AACH,GAFD;;AAIF,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,4BACE,QAAC,CAAD,CAAG,MAAH;AAAA,6BACE,QAAC,CAAD,CAAG,UAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,CAAD,CAAG,IAAH;AAAA,8BAGE,QAAC,QAAD;AACG,QAAA,YAAY,EAAEZ,YADjB;AAEG,QAAA,aAAa,EAAEW,iBAFlB;AAGG,QAAA,MAAM,EAAET,MAHX;AAIG,QAAA,OAAO,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAYE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAtDD;;GAAMH,G;;KAAAA,G;AAwDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport * as C from './App.styles'\nimport { Item } from './types/Item'\nimport { Category } from './types/Category'\nimport { categories } from './data/categories'\nimport { items } from './data/items'\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter'\nimport { TableArea } from './components/TableArea'\nimport { InfoArea  } from './components/InfoArea' \nimport { InputArea } from './components/InputArea'\n\n\nconst App = () => {\n    const [list, setList] = useState(items)\n    const [filteredList, setFilteredList] = useState <Item[]>([])\n    const [currentMonth, setCurrentMonth] = useState(getCurrentMonth())\n    const [income, setIncome] = useState(0)\n    const [expense,setExpense] = useState(0)\n\n    useEffect(() => {\n      setFilteredList( filterListByMonth( list, currentMonth) ) \n    },[list,currentMonth])\n\n    useEffect(()=> {\n      let incomeCount = 0\n      let expenseCount = 0\n      for(let i in filteredList){\n        if(categories[filteredList[i].category].expense){\n          expenseCount += filteredList[i].value\n        } else {\n          incomeCount += filteredList[i].value\n        }\n      }\n\n      setIncome(incomeCount)\n      setExpense(expenseCount)\n\n    },[filteredList])\n\n    const handleMonthChange = (newMonth: string) => {\n        setCurrentMonth(newMonth)\n    }\n\n  return (\n    <C.Container>\n      <C.Header>\n        <C.HeaderText>Sistema Financeiro</C.HeaderText>\n      </C.Header>\n      <C.Body>\n\n\n        <InfoArea\n           currentMonth={currentMonth}\n           onMonthChange={handleMonthChange}   \n           income={income}\n           expense={expense}\n        />\n\n        <InputArea />\n\n        <TableArea list={filteredList} /> \n      \n      \n      </C.Body>\n    </C.Container>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}